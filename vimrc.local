set background=dark
colorscheme seoul256

let g:airline_theme = 'bubblegum'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_symbols.paste = 'ᖘ'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

let g:gitgutter_sign_column_always = 1

set lazyredraw     " Improves responsiveness during macro execution
set updatetime=1000

set foldmethod=syntax
set relativenumber " Most line numbers are relative to the current line
set cursorline     " Highlight the current horizontal line

set pastetoggle=<F2>    " To disable autoindenting before a large paste

set tabstop=4     " TABs are 4 spaces wide
set shiftwidth=4  " Indent by 4 spaces

" replace tabs with spaces, and remove all trailing whitespace
nnoremap <F5> :retab<Bar>:keeppatterns keepjumps %s/\s\+$//e<CR>

match ErrorMsg '\s\+$'  " Highlight trailing whitespace

" Open to linenumber - ex. vim my_file.c:100
" https://github.com/halogenandtoast/vim/blob/master/vimrc#L259

function! OpenToLineNumber()
  let filename=expand("%")
  let parts=split(filename, ":")
  exec ":e " . parts[0]
  exec ":" . parts[1]
  redraw!
endfunction

autocmd BufNewFile,BufEnter,BufRead *:* nested call OpenToLineNumber()

" Save anytime we leave a buffer or Vim loses focus
autocmd BufLeave,FocusLost * silent! wall

" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ 'mode': 'passive',
  \ 'active_filetypes': [],
  \ 'passive_filetypes': [] }
